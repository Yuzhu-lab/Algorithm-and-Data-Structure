# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict
class Solution:
    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:
        D = defaultdict(list)
        def dfs (root, x = 0, y = 0):
            if root == None:
                return None
            D[x].append([y, root.val])
            dfs(root.right, x = x+1, y = y+1)
            dfs(root.left, x = x-1, y = y+1)
            
        dfs(root)
        D = sorted(D.items())
        res = []
        for k,v in D:
            v = sorted(v)
            print(v)
            temp = [x[1] for x in v]
            res.append(temp)
        return res
        
