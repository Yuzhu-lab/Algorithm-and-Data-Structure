# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: TreeNode, sum: int) -> int:
        def IsResult(node, sum):
            if not node:
                return 0
            if node.val == sum:
                return 1 + IsResult(node.left, sum - node.val) + IsResult(node.right, sum - node.val)         
            return IsResult(node.left, sum - node.val) + IsResult(node.right, sum - node.val)
        stack = []
        res = 0
        while root or stack:
            while root:
                stack.append(root)
                root = root.left
            root = stack.pop()
            res += IsResult(root, sum)            
            root = root.right
        return res
