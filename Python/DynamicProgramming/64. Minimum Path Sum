class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        #check if the grid is empty
        if grid == []:
            return 0
        a = len(grid) # a is the number of rows
        b = len(grid[0]) # b is the number of columns
        dp = grid # Since if the node reach here, we need to add the grid value, thus I use a copy of it for my dp
        
        for i in range(0,a):
            for j in range(0,b):
                if i == 0 and j==0:
                    pass
                elif i == 0:
                    dp[0][j] += dp[0][j-1]
                elif j == 0:
                    dp[i][0] += dp[i-1][0]
                else:
                    dp[i][j] += min(dp[i][j-1], dp[i-1][j])
        return dp[-1][-1]
