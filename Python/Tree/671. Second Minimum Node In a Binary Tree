# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def findSecondMinimumValue(self, root: TreeNode) -> int:
        res = [float("inf"),float("inf")]
        stack = []
        curr = root
        while stack or curr:
            while curr:
                stack.append(curr)
                curr = curr.left
            curr = stack.pop()
            if curr.val < res[0]:
                res[1] = res[0]
                res[0] = curr.val   
            elif curr.val > res[0] and curr.val < res[1]:
                res[1] = curr.val
            curr = curr.right
        if res[1] == float("inf"):
            return -1
        return res[1]
