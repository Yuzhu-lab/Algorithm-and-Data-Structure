from collections import Counter
class Solution:
    def shortestCompletingWord(self, licensePlate: str, words: List[str]) -> str:
        plate = Counter(filter(lambda x:x.isalpha(), licensePlate.lower()))
        return min([word for word in words if (Counter(word) & plate) == plate], key = len)
        
# Use dictionary & dictionary to get overlap. min can be sign key to check which aspect to rank
# If the upper case or lower case does not matter, clean it to lower before processing
# Filter using bool function and it returns an address, so that need Counter() or list() to show and output 
